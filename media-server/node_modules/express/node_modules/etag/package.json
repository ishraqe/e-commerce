{
  "name": "etag",
  "description": "Create simple HTTP ETags",
  "version": "1.8.0",
  "contributors": [
    {
      "name": "Douglas Christopher Wilson",
      "email": "doug@somethingdoug.com"
    },
    {
      "name": "David Björklund",
      "email": "david.bjorklund@gmail.com"
    }
  ],
  "license": "MIT",
  "keywords": [
    "etag",
    "http",
    "res"
  ],
  "repository": {
    "type": "git",
    "url": "git://github.com/jshttp/etag"
  },
  "devDependencies": {
    "beautify-benchmark": "0.2.4",
    "benchmark": "2.1.3",
    "eslint": "3.15.0",
    "eslint-config-standard": "6.2.1",
    "eslint-plugin-markdown": "1.0.0-beta.3",
    "eslint-plugin-promise": "3.4.2",
    "eslint-plugin-standard": "2.0.1",
    "istanbul": "0.4.5",
    "mocha": "1.21.5",
    "seedrandom": "2.4.2"
  },
  "files": [
    "LICENSE",
    "HISTORY.md",
    "README.md",
    "index.js"
  ],
  "engines": {
    "node": ">= 0.6"
  },
  "scripts": {
    "bench": "node benchmark/index.js",
    "lint": "eslint --plugin markdown --ext js,md .",
    "test": "mocha --reporter spec --bail --check-leaks test/",
    "test-cov": "istanbul cover node_modules/mocha/bin/_mocha -- --reporter dot --check-leaks test/",
    "test-travis": "istanbul cover node_modules/mocha/bin/_mocha --report lcovonly -- --reporter spec --check-leaks test/"
  },
  "readme": "# etag\n\n[![NPM Version][npm-image]][npm-url]\n[![NPM Downloads][downloads-image]][downloads-url]\n[![Node.js Version][node-version-image]][node-version-url]\n[![Build Status][travis-image]][travis-url]\n[![Test Coverage][coveralls-image]][coveralls-url]\n\nCreate simple HTTP ETags\n\nThis module generates HTTP ETags (as defined in RFC 7232) for use in\nHTTP responses.\n\n## Installation\n\nThis is a [Node.js](https://nodejs.org/en/) module available through the\n[npm registry](https://www.npmjs.com/). Installation is done using the\n[`npm install` command](https://docs.npmjs.com/getting-started/installing-npm-packages-locally):\n\n```sh\n$ npm install etag\n```\n\n## API\n\n<!-- eslint-disable no-unused-vars --> \n\n```js\nvar etag = require('etag')\n```\n\n### etag(entity, [options])\n\nGenerate a strong ETag for the given entity. This should be the complete\nbody of the entity. Strings, `Buffer`s, and `fs.Stats` are accepted. By\ndefault, a strong ETag is generated except for `fs.Stats`, which will\ngenerate a weak ETag (this can be overwritten by `options.weak`).\n\n<!-- eslint-disable no-undef --> \n\n```js\nres.setHeader('ETag', etag(body))\n```\n\n#### Options\n\n`etag` accepts these properties in the options object.\n\n##### weak\n\nSpecifies if the generated ETag will include the weak validator mark (that\nis, the leading `W/`). The actual entity tag is the same. The default value\nis `false`, unless the `entity` is `fs.Stats`, in which case it is `true`.\n\n## Testing\n\n```sh\n$ npm test\n```\n\n## Benchmark\n\n```bash\n$ npm run-script bench\n\n> etag@1.8.0 bench nodejs-etag\n> node benchmark/index.js\n\n  http_parser@2.7.0\n  node@6.9.1\n  v8@5.1.281.84\n  uv@1.9.1\n  zlib@1.2.8\n  ares@1.10.1-DEV\n  icu@57.1\n  modules@48\n  openssl@1.0.2j\n\n> node benchmark/body0-100b.js\n\n  100B body\n\n  4 tests completed.\n\n* buffer - strong x 498,600 ops/sec ±0.82% (191 runs sampled)\n* buffer - weak   x 496,249 ops/sec ±0.59% (179 runs sampled)\n  string - strong x 466,298 ops/sec ±0.88% (186 runs sampled)\n  string - weak   x 464,298 ops/sec ±0.84% (184 runs sampled)\n\n> node benchmark/body1-1kb.js\n\n  1KB body\n\n  4 tests completed.\n\n* buffer - strong x 346,535 ops/sec ±0.32% (189 runs sampled)\n* buffer - weak   x 344,958 ops/sec ±0.52% (185 runs sampled)\n  string - strong x 259,672 ops/sec ±0.82% (191 runs sampled)\n  string - weak   x 260,931 ops/sec ±0.76% (190 runs sampled)\n\n> node benchmark/body2-5kb.js\n\n  5KB body\n\n  4 tests completed.\n\n* buffer - strong x 136,510 ops/sec ±0.62% (189 runs sampled)\n* buffer - weak   x 136,604 ops/sec ±0.51% (191 runs sampled)\n  string - strong x  80,903 ops/sec ±0.84% (192 runs sampled)\n  string - weak   x  82,785 ops/sec ±0.50% (193 runs sampled)\n\n> node benchmark/body3-10kb.js\n\n  10KB body\n\n  4 tests completed.\n\n* buffer - strong x 78,650 ops/sec ±0.31% (193 runs sampled)\n* buffer - weak   x 78,685 ops/sec ±0.41% (193 runs sampled)\n  string - strong x 43,999 ops/sec ±0.43% (193 runs sampled)\n  string - weak   x 44,081 ops/sec ±0.45% (192 runs sampled)\n\n> node benchmark/body4-100kb.js\n\n  100KB body\n\n  4 tests completed.\n\n  buffer - strong x 8,860 ops/sec ±0.66% (191 runs sampled)\n* buffer - weak   x 9,030 ops/sec ±0.26% (193 runs sampled)\n  string - strong x 4,838 ops/sec ±0.16% (194 runs sampled)\n  string - weak   x 4,800 ops/sec ±0.52% (192 runs sampled)\n\n> node benchmark/stats.js\n\n  stat\n\n  4 tests completed.\n\n* real - strong x 1,468,073 ops/sec ±0.32% (191 runs sampled)\n* real - weak   x 1,446,852 ops/sec ±0.64% (190 runs sampled)\n  fake - strong x   635,707 ops/sec ±0.33% (194 runs sampled)\n  fake - weak   x   627,708 ops/sec ±0.36% (192 runs sampled)\n```\n\n## License\n\n[MIT](LICENSE)\n\n[npm-image]: https://img.shields.io/npm/v/etag.svg\n[npm-url]: https://npmjs.org/package/etag\n[node-version-image]: https://img.shields.io/node/v/etag.svg\n[node-version-url]: https://nodejs.org/en/download/\n[travis-image]: https://img.shields.io/travis/jshttp/etag/master.svg\n[travis-url]: https://travis-ci.org/jshttp/etag\n[coveralls-image]: https://img.shields.io/coveralls/jshttp/etag/master.svg\n[coveralls-url]: https://coveralls.io/r/jshttp/etag?branch=master\n[downloads-image]: https://img.shields.io/npm/dm/etag.svg\n[downloads-url]: https://npmjs.org/package/etag\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/jshttp/etag/issues"
  },
  "_id": "etag@1.8.0",
  "dist": {
    "shasum": "9c8e5140eb3337bc2ed766b77979a673854f950c"
  },
  "_from": "etag@~1.8.0",
  "_resolved": "https://registry.npmjs.org/etag/-/etag-1.8.0.tgz"
}
